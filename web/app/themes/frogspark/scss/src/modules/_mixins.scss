/* Responsive mixins. */
@mixin sm {
  @media only screen and (min-width: map-get($grid-breakpoints, "sm")) {
    @content;
  }
}
@mixin md {
  @media only screen and (min-width: map-get($grid-breakpoints, "md")) {
    @content;
  }
}
@mixin lg {
  @media only screen and (min-width: map-get($grid-breakpoints, "lg")) {
    @content;
  }
}
@mixin xl {
  @media only screen and (min-width: map-get($grid-breakpoints, "xl")) {
    @content;
  }
}
@mixin xxl {
  @media only screen and (min-width: map-get($grid-breakpoints, "xxl")) {
    @content;
  }
}

@mixin xxl-max {
  @media only screen and (max-width: map-get($grid-breakpoints, "xxl")) {
    @content; 
  }
}
@mixin xl-max {
  @media only screen and (max-width:  map-get($grid-breakpoints, "xl")) {
    @content; 
  }
}
@mixin lg-max {
  @media only screen and (max-width:  map-get($grid-breakpoints, "lg")) {
    @content; 
  }
}
@mixin md-max {
  @media only screen and (max-width:  map-get($grid-breakpoints, "md")) {
    @content; 
  }
}
@mixin sm-max {
  @media only screen and (max-width:  map-get($grid-breakpoints, "sm")) {
    @content; 
  }
}

/* Cross-browser mixins. */
@mixin ie {
  _:-ms-input-placeholder, :root {
    @content;
  }
}
@mixin edge {
  @supports (-ms-ime-align:auto) {
    @content;
  }
}

/* General Mixins*/
@mixin pseudo($display: block, $pos: 'absolute', $content: '') {
  display: $display;
  content: $content;
  position: $pos;
}

@mixin responsive-ratio($x, $y, $pseudo: false) {
  $padding: unquote(($x/$y)*100+'%');
  @if $pseudo {
    &:before {
      @include pseudo($pos: relative);
      width: 100%;
      padding-bottom: $padding;
    }
  }
  @else {
    padding-bottom: $padding;
  }
}

@mixin input-placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}

@mixin create-responsive-class($custom_class, $key, $breakpoints: $grid-breakpoints) {
  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      .#{$custom_class}#{$infix}-#{$key} {
        @content;
      }
    }
  }
}